#!/bin/sh
# postinst script for wdb
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
. /usr/share/dbconfig-common/dpkg/postinst.pgsql
dbc_go wdb $@


db_get wdb/user_account && DB_USER="$RET"
db_get wdb/database_name && DB_NAME="$RET"

case "$1" in
    configure)
        #Create wdb admin user
		#echo $$ adduser --gecos 0 --disabled-password $DB_USER >> /dev/null
		
		if ! id -u $DB_USER > /dev/null 2>&1; then
		    adduser --gecos 0 --disabled-password $DB_USER
		    # Remove any old crontab entries if this account have had any before
		    su $DB_USER -c "crontab -r" 2> /dev/null || true
		fi
		echo 'PATH=$PATH:/usr/lib/wdb/' >> /home/$DB_USER/.bashrc
	
		# Generate config file
		if [ ! -f /etc/wdb.conf ]; then
		    echo "database = $DB_NAME" > /etc/wdb.conf
		    PORT=`pg_lsclusters -h | grep main | xargs echo | cut -d' ' -f3`
		    echo "port = $PORT" >> /etc/wdb.conf
		    echo "user = $DB_USER" >> /etc/wdb.conf
		fi
	
		su postgres -c "psql -c \"ALTER USER $DB_USER WITH SUPERUSER\"" >> /dev/null
    ;;

    abort-upgrade)
    	# success: We have successfully aborted an upgrade
    ;;
    abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
