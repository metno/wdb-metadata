#!/bin/sh
# postrm script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
if [ -f /usr/share/dbconfig-common/dpkg/postrm.pgsql ]; then
   . /usr/share/dbconfig-common/dpkg/postrm.pgsql 
   dbc_go wdb $@
fi

db_get wdb/database_name && DB_NAME="$RET"
db_get wdb/user_account && DB_USER="$RET" || DB_USER=wdb

case "$1" in
    purge)
	rm -f /etc/wdb.conf
	if [ -n "$DB_USER" ]; then
	    deluser --remove-home $DB_USER >> /dev/null || true
	    delgroup --only-if-empty $DB_USER >> /dev/null || true
	fi
	#su postgres -c "for U in wcitestwriter wcitest gribtest cleantest kvalobsload gribload wdb_test wdb_kvalobs wdb_grib wdb_read wdb_clean wdb_write wdb_admin; do dropuser $U; done" || true
    ;;

    upgrade)
	# Called on old postrm
    	# By this time, all sql files should have been overwritten by the new 
	# version's, so this should be ok (even if this is called from the old 
	# postrm script). 
	su $DB_USER -c "/usr/lib/wdb/upgrade_database -d $DB_NAME"

	# Extra sanity check after upgrade
	INSTALLED_VERSION=`su postgres -c "psql $DB_NAME -tc 'SELECT wci.version()' | cut -sd\  -f3"`
	NEW_VERSION=`echo $2 | sed s/-.*//`
	test $INSTALLED_VERSION = $NEW_VERSION
	# Fail goes to new-postrm: failed-upgrade
    ;;
     
    failed-upgrade)
		# Called on new postrm
		# nothing we can do here, so fail
		false
		# Fail goes to old preinst: abort-upgrade, and eventually to new 
		# postrm abort-upgrade
	;;
     
	abort-upgrade)
	    # Called on new postrm
	    INSTALLED_VERSION=`su postgres -c "psql $DB_NAME -tc 'SELECT wci.version()' | cut -sd\  -f3"`
	    OLD_VERSION=`echo $2 | sed s/-.*//`
	
	    # If this fails, leaves package in half-installed state.
	    # otherwise go to old postinst abort-upgrade
	    test $INSTALLED_VERSION = $OLD_VERSION
    ;;
    remove|abort-install|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


